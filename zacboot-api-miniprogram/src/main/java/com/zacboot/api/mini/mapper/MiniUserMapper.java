package com.zacboot.api.mini.mapper;

import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.zac.system.core.entity.mini.MiniUserEntity;
import com.zacboot.api.mini.beans.dtos.example.MiniSysUserExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

@Mapper
public interface MiniUserMapper extends BaseMapper<MiniUserEntity> {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot-api-mini..mini_sys_user
     *
     * @mbg.generated Sun Mar 19 13:50:07 CST 2023
     */
    @SelectProvider(type= MiniSysUserSqlProvider.class, method="countByExample")
    long countByExample(MiniSysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot-api-mini..mini_sys_user
     *
     * @mbg.generated Sun Mar 19 13:50:07 CST 2023
     */
    @DeleteProvider(type=MiniSysUserSqlProvider.class, method="deleteByExample")
    int deleteByExample(MiniSysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot-api-mini..mini_sys_user
     *
     * @mbg.generated Sun Mar 19 13:50:07 CST 2023
     */
    @Insert({
            "insert into mini_sys_user (uuid, open_id, ",
            "phone_number, avatar_url, ",
            "nick_name, create_user, ",
            "create_time, update_user, ",
            "update_time, deleted)",
            "values (#{uuid,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, ",
            "#{phoneNumber,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, ",
            "#{nickName,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, ",
            "#{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, ",
            "#{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT})"
    })
    int insert(MiniUserEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot-api-mini..mini_sys_user
     *
     * @mbg.generated Sun Mar 19 13:50:07 CST 2023
     */
    @InsertProvider(type=MiniSysUserSqlProvider.class, method="insertSelective")
    int insertSelective(MiniUserEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot-api-mini..mini_sys_user
     *
     * @mbg.generated Sun Mar 19 13:50:07 CST 2023
     */
    @SelectProvider(type=MiniSysUserSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="uuid", property="uuid", jdbcType= JdbcType.VARCHAR),
            @Result(column="open_id", property="openId", jdbcType=JdbcType.VARCHAR),
            @Result(column="phone_number", property="phoneNumber", jdbcType=JdbcType.VARCHAR),
            @Result(column="avatar_url", property="avatarUrl", jdbcType=JdbcType.VARCHAR),
            @Result(column="nick_name", property="nickName", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_user", property="createUser", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="update_user", property="updateUser", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="deleted", property="deleted", jdbcType=JdbcType.BIT)
    })
    List<MiniUserEntity> selectByExampleWithRowbounds(MiniSysUserExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot-api-mini..mini_sys_user
     *
     * @mbg.generated Sun Mar 19 13:50:07 CST 2023
     */
    @SelectProvider(type=MiniSysUserSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="uuid", property="uuid", jdbcType=JdbcType.VARCHAR),
            @Result(column="open_id", property="openId", jdbcType=JdbcType.VARCHAR),
            @Result(column="phone_number", property="phoneNumber", jdbcType=JdbcType.VARCHAR),
            @Result(column="avatar_url", property="avatarUrl", jdbcType=JdbcType.VARCHAR),
            @Result(column="nick_name", property="nickName", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_user", property="createUser", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="update_user", property="updateUser", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="deleted", property="deleted", jdbcType=JdbcType.BIT)
    })
    List<MiniUserEntity> selectByExample(MiniSysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot-api-mini..mini_sys_user
     *
     * @mbg.generated Sun Mar 19 13:50:07 CST 2023
     */
    @UpdateProvider(type=MiniSysUserSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") MiniUserEntity record, @Param("example") MiniSysUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot-api-mini..mini_sys_user
     *
     * @mbg.generated Sun Mar 19 13:50:07 CST 2023
     */
    @UpdateProvider(type=MiniSysUserSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") MiniUserEntity record, @Param("example") MiniSysUserExample example);
}
