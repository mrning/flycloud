package com.zac.flycloud.mapper;

import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.zac.flycloud.dto.SysLogDTO;
import com.zac.flycloud.dto.example.SysLogDTOExample;

import java.util.Date;
import java.util.List;
import java.util.Map;

import com.zac.flycloud.tablemodel.SysLog;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface SysLogDTOMapper extends BaseMapper<SysLog> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @SelectProvider(type=SysLogDTOSqlProvider.class, method="countByExample")
    long countByExample(SysLogDTOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @DeleteProvider(type=SysLogDTOSqlProvider.class, method="deleteByExample")
    int deleteByExample(SysLogDTOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @Insert({
        "insert into sys_log (uuid, cost_time, ",
        "ip, request_param, ",
        "request_type, request_url, ",
        "`method`, username, ",
        "userid, log_content, ",
        "log_type, operate_type, ",
        "create_user, create_time, ",
        "update_user, update_time, ",
        "deleted)",
        "values (#{uuid,jdbcType=VARCHAR}, #{costTime,jdbcType=BIGINT}, ",
        "#{ip,jdbcType=VARCHAR}, #{requestParam,jdbcType=VARCHAR}, ",
        "#{requestType,jdbcType=VARCHAR}, #{requestUrl,jdbcType=VARCHAR}, ",
        "#{method,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, ",
        "#{userid,jdbcType=VARCHAR}, #{logContent,jdbcType=VARCHAR}, ",
        "#{logType,jdbcType=INTEGER}, #{operateType,jdbcType=INTEGER}, ",
        "#{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, ",
        "#{deleted,jdbcType=BIT})"
    })
    int insert(SysLogDTO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @InsertProvider(type=SysLogDTOSqlProvider.class, method="insertSelective")
    int insertSelective(SysLogDTO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @SelectProvider(type=SysLogDTOSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="uuid", property="uuid", jdbcType=JdbcType.VARCHAR),
        @Result(column="cost_time", property="costTime", jdbcType=JdbcType.BIGINT),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_param", property="requestParam", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_type", property="requestType", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_url", property="requestUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="method", property="method", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR),
        @Result(column="log_content", property="logContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="log_type", property="logType", jdbcType=JdbcType.INTEGER),
        @Result(column="operate_type", property="operateType", jdbcType=JdbcType.INTEGER),
        @Result(column="create_user", property="createUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_user", property="updateUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted", property="deleted", jdbcType=JdbcType.BIT)
    })
    List<SysLogDTO> selectByExampleWithRowbounds(SysLogDTOExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @SelectProvider(type=SysLogDTOSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="uuid", property="uuid", jdbcType=JdbcType.VARCHAR),
        @Result(column="cost_time", property="costTime", jdbcType=JdbcType.BIGINT),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_param", property="requestParam", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_type", property="requestType", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_url", property="requestUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="method", property="method", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR),
        @Result(column="log_content", property="logContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="log_type", property="logType", jdbcType=JdbcType.INTEGER),
        @Result(column="operate_type", property="operateType", jdbcType=JdbcType.INTEGER),
        @Result(column="create_user", property="createUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_user", property="updateUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted", property="deleted", jdbcType=JdbcType.BIT)
    })
    List<SysLogDTO> selectByExample(SysLogDTOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @UpdateProvider(type=SysLogDTOSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SysLogDTO record, @Param("example") SysLogDTOExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @UpdateProvider(type=SysLogDTOSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") SysLogDTO record, @Param("example") SysLogDTOExample example);

    /**
     * @功能：清空所有日志记录
     */
    @Delete({"DELETE FROM sys_log"})
    void removeAll();

    /**
     * 获取系统总访问次数
     *
     * @return Long
     */
    @Select({"select count(1) from sys_log where log_type = 1"})
    Long findTotalVisitCount();

    /**
     * 获取系统今日访问次数
     *
     * @return Long
     */
    @Select({"select count(1) from sys_log where log_type = 1 and create_time &gt;= #{dayStart} and create_time &lt; #{dayEnd}"})
    Long findTodayVisitCount(@Param("dayStart") Date dayStart, @Param("dayEnd") Date dayEnd);

    /**
     * 获取系统今日访问 IP数
     *
     * @return Long
     */
    @Select({"select count(distinct(ip)) from sys_log where log_type = 1 and create_time &gt;= #{dayStart} and create_time &lt; #{dayEnd}"})
    Long findTodayIp(@Param("dayStart") Date dayStart, @Param("dayEnd") Date dayEnd);

    /**
     *   首页：根据时间统计访问数量/ip数量
     * @param dayStart
     * @param dayEnd
     * @return
     */
    @Select({"select count(*) as visit\n" +
            "        \t   ,count(distinct(ip)) as ip\n" +
            "        \t   ,DATE_FORMAT(create_time, '%Y-%m-%d') as tian\n" +
            "        \t   ,DATE_FORMAT(create_time, '%m-%d') as type\n" +
            "        \t   from sys_log \n" +
            "         where log_type = 1 and create_time &gt;= #{dayStart} and create_time &lt; #{dayEnd}\n" +
            "         group by tian,type\n" +
            "         order by tian asc"})
    List<Map<String,Object>> findVisitCount(@Param("dayStart") Date dayStart, @Param("dayEnd") Date dayEnd, @Param("dbType") String dbType);
}