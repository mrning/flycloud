package com.zac.flycloud.admin.dao.mapper;

import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import com.zac.flycloud.admin.beans.entity.SysLog;
import com.zac.flycloud.admin.beans.entity.example.SysLogExample;
import com.zac.flycloud.admin.dao.mapper.provider.SysLogSqlProvider;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

import java.util.Date;
import java.util.List;
import java.util.Map;

public interface SysLogMapper extends BaseMapper<SysLog> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @SelectProvider(type= SysLogSqlProvider.class, method="countByExample")
    long countByExample(SysLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @DeleteProvider(type= SysLogSqlProvider.class, method="deleteByExample")
    int deleteByExample(SysLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    int insert(SysLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @InsertProvider(type= SysLogSqlProvider.class, method="insertSelective")
    int insertSelective(SysLog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @SelectProvider(type= SysLogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="uuid", property="uuid", jdbcType=JdbcType.VARCHAR),
        @Result(column="cost_time", property="costTime", jdbcType=JdbcType.BIGINT),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_param", property="requestParam", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_type", property="requestType", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_url", property="requestUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="method", property="method", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR),
        @Result(column="log_content", property="logContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="log_type", property="logType", jdbcType=JdbcType.INTEGER),
        @Result(column="operate_type", property="operateType", jdbcType=JdbcType.INTEGER),
        @Result(column="create_user", property="createUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_user", property="updateUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted", property="deleted", jdbcType=JdbcType.BIT)
    })
    List<SysLog> selectByExampleWithRowbounds(SysLogExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @SelectProvider(type= SysLogSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="uuid", property="uuid", jdbcType=JdbcType.VARCHAR),
        @Result(column="cost_time", property="costTime", jdbcType=JdbcType.BIGINT),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_param", property="requestParam", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_type", property="requestType", jdbcType=JdbcType.VARCHAR),
        @Result(column="request_url", property="requestUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="method", property="method", jdbcType=JdbcType.VARCHAR),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="userid", property="userid", jdbcType=JdbcType.VARCHAR),
        @Result(column="log_content", property="logContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="log_type", property="logType", jdbcType=JdbcType.INTEGER),
        @Result(column="operate_type", property="operateType", jdbcType=JdbcType.INTEGER),
        @Result(column="create_user", property="createUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_user", property="updateUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="deleted", property="deleted", jdbcType=JdbcType.BIT)
    })
    List<SysLog> selectByExample(SysLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @UpdateProvider(type= SysLogSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SysLog record, @Param("example") SysLogExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flycloud..sys_log
     *
     * @mbg.generated Sat Apr 24 19:05:51 CST 2021
     */
    @UpdateProvider(type= SysLogSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") SysLog record, @Param("example") SysLogExample example);

    /**
     * @功能：清空所有日志记录
     */
    @Delete({"DELETE FROM sys_log"})
    void removeAll();

    /**
     * 获取系统总访问次数
     *
     * @return Long
     */
    @Select({"select count(1) from sys_log where log_type = 1"})
    Long findTotalVisitCount();

    /**
     * 获取系统今日访问次数
     *
     * @return Long
     */
    @Select({"select count(1) from sys_log where log_type = 1 and create_time >= #{dayStart} and create_time < #{dayEnd}"})
    Long findTodayVisitCount(@Param("dayStart") Date dayStart, @Param("dayEnd") Date dayEnd);

    /**
     * 获取系统今日访问 IP数
     *
     * @return Long
     */
    @Select({"select count(distinct(ip)) from sys_log where log_type = 1 and create_time >= #{dayStart} and create_time < #{dayEnd}"})
    Long findTodayIp(@Param("dayStart") Date dayStart, @Param("dayEnd") Date dayEnd);

    /**
     *   首页：根据时间统计访问数量/ip数量
     * @param dayStart
     * @param dayEnd
     * @return
     */
    @Select({"select count(*) as visit\n" +
            "        \t   ,count(distinct(ip)) as ip\n" +
            "        \t   ,DATE_FORMAT(create_time, '%Y-%m-%d') as tian\n" +
            "        \t   ,DATE_FORMAT(create_time, '%m-%d') as type\n" +
            "        \t   from sys_log \n" +
            "         where log_type = 1 and create_time >= #{dayStart} and create_time < #{dayEnd}\n" +
            "         group by tian,type\n" +
            "         order by tian asc"})
    List<Map<String,Object>> findVisitCount(@Param("dayStart") Date dayStart, @Param("dayEnd") Date dayEnd, @Param("dbType") String dbType);
}