package com.zacboot.admin.work.mapper.provider;

import com.zacboot.admin.work.beans.example.AppThreeReportExample;
import com.zacboot.system.core.entity.admin.AppThreeReport;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

public class AppThreeReportSqlProvider {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot..app_three_report
     *
     * @mbg.generated Thu Apr 20 15:24:51 CST 2023
     */
    public String countByExample(AppThreeReportExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("app_three_report");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot..app_three_report
     *
     * @mbg.generated Thu Apr 20 15:24:51 CST 2023
     */
    public String deleteByExample(AppThreeReportExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("app_three_report");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot..app_three_report
     *
     * @mbg.generated Thu Apr 20 15:24:51 CST 2023
     */
    public String insertSelective(AppThreeReport record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("app_three_report");
        
        if (record.getUuid() != null) {
            sql.VALUES("uuid", "#{uuid,jdbcType=VARCHAR}");
        }
        
        if (record.getUserUuid() != null) {
            sql.VALUES("user_uuid", "#{userUuid,jdbcType=VARCHAR}");
        }
        
        if (record.getUserName() != null) {
            sql.VALUES("user_name", "#{userName,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptUuid() != null) {
            sql.VALUES("dept_uuid", "#{deptUuid,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptName() != null) {
            sql.VALUES("dept_name", "#{deptName,jdbcType=VARCHAR}");
        }
        
        if (record.getRoleUuid() != null) {
            sql.VALUES("role_uuid", "#{roleUuid,jdbcType=VARCHAR}");
        }
        
        if (record.getRoleName() != null) {
            sql.VALUES("role_name", "#{roleName,jdbcType=VARCHAR}");
        }
        
        if (record.getReportType() != null) {
            sql.VALUES("report_type", "#{reportType,jdbcType=VARCHAR}");
        }
        
        if (record.getStartDate() != null) {
            sql.VALUES("start_date", "#{startDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getEndDate() != null) {
            sql.VALUES("end_date", "#{endDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getComplete() != null) {
            sql.VALUES("complete", "#{complete,jdbcType=INTEGER}");
        }
        
        if (record.getWorkContent() != null) {
            sql.VALUES("work_content", "#{workContent,jdbcType=VARCHAR}");
        }
        
        if (record.getUnfinalReason() != null) {
            sql.VALUES("unfinal_reason", "#{unfinalReason,jdbcType=VARCHAR}");
        }
        
        if (record.getDifficulty() != null) {
            sql.VALUES("difficulty", "#{difficulty,jdbcType=VARCHAR}");
        }
        
        if (record.getTodoList() != null) {
            sql.VALUES("todo_list", "#{todoList,jdbcType=VARCHAR}");
        }
        
        if (record.getFuturePlans() != null) {
            sql.VALUES("future_plans", "#{futurePlans,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateUser() != null) {
            sql.VALUES("create_user", "#{createUser,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUser() != null) {
            sql.VALUES("update_user", "#{updateUser,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.VALUES("update_time", "#{updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDeleted() != null) {
            sql.VALUES("deleted", "#{deleted,jdbcType=BIT}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot..app_three_report
     *
     * @mbg.generated Thu Apr 20 15:24:51 CST 2023
     */
    public String selectByExample(AppThreeReportExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("uuid");
        } else {
            sql.SELECT("uuid");
        }
        sql.SELECT("user_uuid");
        sql.SELECT("user_name");
        sql.SELECT("dept_uuid");
        sql.SELECT("dept_name");
        sql.SELECT("role_uuid");
        sql.SELECT("role_name");
        sql.SELECT("report_type");
        sql.SELECT("start_date");
        sql.SELECT("end_date");
        sql.SELECT("complete");
        sql.SELECT("work_content");
        sql.SELECT("unfinal_reason");
        sql.SELECT("difficulty");
        sql.SELECT("todo_list");
        sql.SELECT("future_plans");
        sql.SELECT("create_user");
        sql.SELECT("create_time");
        sql.SELECT("update_user");
        sql.SELECT("update_time");
        sql.SELECT("deleted");
        sql.FROM("app_three_report");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot..app_three_report
     *
     * @mbg.generated Thu Apr 20 15:24:51 CST 2023
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        AppThreeReport record = (AppThreeReport) parameter.get("record");
        AppThreeReportExample example = (AppThreeReportExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("app_three_report");
        
        if (record.getUuid() != null) {
            sql.SET("uuid = #{record.uuid,jdbcType=VARCHAR}");
        }
        
        if (record.getUserUuid() != null) {
            sql.SET("user_uuid = #{record.userUuid,jdbcType=VARCHAR}");
        }
        
        if (record.getUserName() != null) {
            sql.SET("user_name = #{record.userName,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptUuid() != null) {
            sql.SET("dept_uuid = #{record.deptUuid,jdbcType=VARCHAR}");
        }
        
        if (record.getDeptName() != null) {
            sql.SET("dept_name = #{record.deptName,jdbcType=VARCHAR}");
        }
        
        if (record.getRoleUuid() != null) {
            sql.SET("role_uuid = #{record.roleUuid,jdbcType=VARCHAR}");
        }
        
        if (record.getRoleName() != null) {
            sql.SET("role_name = #{record.roleName,jdbcType=VARCHAR}");
        }
        
        if (record.getReportType() != null) {
            sql.SET("report_type = #{record.reportType,jdbcType=VARCHAR}");
        }
        
        if (record.getStartDate() != null) {
            sql.SET("start_date = #{record.startDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getEndDate() != null) {
            sql.SET("end_date = #{record.endDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getComplete() != null) {
            sql.SET("complete = #{record.complete,jdbcType=INTEGER}");
        }
        
        if (record.getWorkContent() != null) {
            sql.SET("work_content = #{record.workContent,jdbcType=VARCHAR}");
        }
        
        if (record.getUnfinalReason() != null) {
            sql.SET("unfinal_reason = #{record.unfinalReason,jdbcType=VARCHAR}");
        }
        
        if (record.getDifficulty() != null) {
            sql.SET("difficulty = #{record.difficulty,jdbcType=VARCHAR}");
        }
        
        if (record.getTodoList() != null) {
            sql.SET("todo_list = #{record.todoList,jdbcType=VARCHAR}");
        }
        
        if (record.getFuturePlans() != null) {
            sql.SET("future_plans = #{record.futurePlans,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateUser() != null) {
            sql.SET("create_user = #{record.createUser,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUser() != null) {
            sql.SET("update_user = #{record.updateUser,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTime() != null) {
            sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDeleted() != null) {
            sql.SET("deleted = #{record.deleted,jdbcType=BIT}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot..app_three_report
     *
     * @mbg.generated Thu Apr 20 15:24:51 CST 2023
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("app_three_report");
        
        sql.SET("uuid = #{record.uuid,jdbcType=VARCHAR}");
        sql.SET("user_uuid = #{record.userUuid,jdbcType=VARCHAR}");
        sql.SET("user_name = #{record.userName,jdbcType=VARCHAR}");
        sql.SET("dept_uuid = #{record.deptUuid,jdbcType=VARCHAR}");
        sql.SET("dept_name = #{record.deptName,jdbcType=VARCHAR}");
        sql.SET("role_uuid = #{record.roleUuid,jdbcType=VARCHAR}");
        sql.SET("role_name = #{record.roleName,jdbcType=VARCHAR}");
        sql.SET("report_type = #{record.reportType,jdbcType=VARCHAR}");
        sql.SET("start_date = #{record.startDate,jdbcType=TIMESTAMP}");
        sql.SET("end_date = #{record.endDate,jdbcType=TIMESTAMP}");
        sql.SET("complete = #{record.complete,jdbcType=INTEGER}");
        sql.SET("work_content = #{record.workContent,jdbcType=VARCHAR}");
        sql.SET("unfinal_reason = #{record.unfinalReason,jdbcType=VARCHAR}");
        sql.SET("difficulty = #{record.difficulty,jdbcType=VARCHAR}");
        sql.SET("todo_list = #{record.todoList,jdbcType=VARCHAR}");
        sql.SET("future_plans = #{record.futurePlans,jdbcType=VARCHAR}");
        sql.SET("create_user = #{record.createUser,jdbcType=VARCHAR}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        sql.SET("update_user = #{record.updateUser,jdbcType=VARCHAR}");
        sql.SET("update_time = #{record.updateTime,jdbcType=TIMESTAMP}");
        sql.SET("deleted = #{record.deleted,jdbcType=BIT}");
        
        AppThreeReportExample example = (AppThreeReportExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table zacboot..app_three_report
     *
     * @mbg.generated Thu Apr 20 15:24:51 CST 2023
     */
    protected void applyWhere(SQL sql, AppThreeReportExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<AppThreeReportExample.Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            AppThreeReportExample.Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<AppThreeReportExample.Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    AppThreeReportExample.Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}